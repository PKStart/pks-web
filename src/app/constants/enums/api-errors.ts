export enum ApiError {
  EMAIL_REGISTERED = 'EMAIL_REGISTERED',
  INVALID_AUTH_TOKEN = 'INVALID_AUTH_TOKEN',
  EXPIRED_AUTH_TOKEN = 'EXPIRED_AUTH_TOKEN',
  INVALID_LOGIN_CODE = 'INVALID_LOGIN_CODE',
  EXPIRED_LOGIN_CODE = 'EXPIRED_LOGIN_CODE',
  INVALID_MAGIC_LINK = 'INVALID_MAGIC_LINK',
  UNABLE_TO_SEND = 'UNABLE_TO_SEND',
  USER_NOT_FOUND = 'USER_NOT_FOUND',
  ITEM_NOT_FOUND = 'ITEM_NOT_FOUND',
  REQUEST_VALIDATION_FAILED = 'REQUEST_VALIDATION_FAILED',
  UNAUTHORIZED = 'UNAUTHORIZED',
  METHOD_NOT_ALLOWED = 'METHOD_NOT_ALLOWED',
  UNKNOWN_ERROR = 'UNKNOWN_ERROR',
  DATA_ALREADY_EXISTS = 'DATA_ALREADY_EXISTS',
  UNKNOWN_OPERATION = 'UNKNOWN_OPERATION',
  FORBIDDEN_OPERATION = 'FORBIDDEN_OPERATION',
}

export const ApiErrorMap: Record<ApiError, string> = {
  [ApiError.EMAIL_REGISTERED]: 'Email is already registered',
  [ApiError.INVALID_AUTH_TOKEN]: 'Unauthorized: Auth token is invalid',
  [ApiError.EXPIRED_AUTH_TOKEN]: 'Unauthorized: Auth token is expired',
  [ApiError.INVALID_LOGIN_CODE]: 'Unauthorized: Login code is invalid',
  [ApiError.EXPIRED_LOGIN_CODE]: 'Unauthorized: Login code is expired',
  [ApiError.INVALID_MAGIC_LINK]: 'Unauthorized: Magic link is invalid or expired',
  [ApiError.UNABLE_TO_SEND]: 'Could not send email',
  [ApiError.USER_NOT_FOUND]: 'User not found',
  [ApiError.ITEM_NOT_FOUND]: 'Item not found',
  [ApiError.REQUEST_VALIDATION_FAILED]: 'Request validation failed',
  [ApiError.UNAUTHORIZED]: 'Unauthorized',
  [ApiError.METHOD_NOT_ALLOWED]: 'HTTP Method not allowed',
  [ApiError.UNKNOWN_ERROR]: 'Something went wrong: server or database error',
  [ApiError.DATA_ALREADY_EXISTS]: 'Data already exists',
  [ApiError.UNKNOWN_OPERATION]: 'Unknown operation',
  [ApiError.FORBIDDEN_OPERATION]: 'Forbidden operation',
}

export enum ValidationError {
  INVALID_EMAIL = 'INVALID_EMAIL',
  INVALID_LOGIN_CODE = 'INVALID_LOGIN_CODE',
  STRING_REQUIRED = 'STRING_REQUIRED',
  NUMBER_REQUIRED = 'NUMBER_REQUIRED',
  ARRAY_REQUIRED = 'ARRAY_REQUIRED',
  OBJECT_REQUIRED = 'OBJECT_REQUIRED',
  BOOLEAN_REQUIRED = 'BOOLEAN_REQUIRED',
  NULLABLE_FIELD_REQUIRED = 'NULLABLE_FIELD_REQUIRED',
  TEXT_OR_LINK_REQUIRED = 'TEXT_OR_LINK_REQUIRED',
  MIN_LENGTH = 'MIN_LENGTH',
  MAX_LENGTH = 'MAX_LENGTH',
  EXACT_LENGTH = 'EXACT_LENGTH',
  MIN_VALUE = 'MIN_VALUE',
  MAX_VALUE = 'MAX_VALUE',
  INVALID_FORMAT = 'INVALID_FORMAT',
  INVALID_DATE = 'INVALID_DATE',
  INVALID_TIME = 'INVALID_TIME',
  INVALID_URL = 'INVALID_URL',
  INVALID_CATEGORY = 'INVALID_CATEGORY',
  INVALID_UUID = 'INVALID_UUID',
  INVALID_LINK = 'INVALID_LINK',
}

export const ValidationErrorMap: Record<ValidationError, string> = {
  [ValidationError.ARRAY_REQUIRED]: 'Array required',
  [ValidationError.OBJECT_REQUIRED]: 'Object required',
  [ValidationError.BOOLEAN_REQUIRED]: 'Boolean required',
  [ValidationError.INVALID_CATEGORY]: 'Invalid category',
  [ValidationError.INVALID_DATE]: 'Invalid date',
  [ValidationError.INVALID_TIME]: 'Invalid time',
  [ValidationError.INVALID_EMAIL]: 'Invalid email address',
  [ValidationError.INVALID_FORMAT]: 'Invalid format',
  [ValidationError.INVALID_LINK]: 'Invalid link',
  [ValidationError.INVALID_LOGIN_CODE]: 'Invalid login code',
  [ValidationError.INVALID_URL]: 'Invalid url',
  [ValidationError.INVALID_UUID]: 'Invalid UUID',
  [ValidationError.MAX_LENGTH]: 'Maximum length exceeded',
  [ValidationError.MAX_VALUE]: 'Maximum value exceeded',
  [ValidationError.MIN_LENGTH]: 'Minimum length not reached',
  [ValidationError.MIN_VALUE]: 'Minimum value not reached',
  [ValidationError.EXACT_LENGTH]: 'Exact string length needed',
  [ValidationError.NUMBER_REQUIRED]: 'Number required',
  [ValidationError.STRING_REQUIRED]: 'String required',
  [ValidationError.NULLABLE_FIELD_REQUIRED]: 'Field is nullable but required',
  [ValidationError.TEXT_OR_LINK_REQUIRED]: 'Text or link required',
}
